{"version":3,"sources":["components/Header.js","components/Form.js","components/Panel.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Form","props","className","onSubmit","submit","type","onChange","changeDate","name","changeCountry","value","selected","disabled","hidden","htmlFor","id","changeSex","isClicked","onClick","refresh","Panel","_props$data","data","deathMonth","deathDate","deathYear","percentLived","percentLeft","deathDay","deathHours","deathMinutes","remainingTime","month","day","deathDateLastDigit","toString","split","pop","ending","timeLeft","yearsLeft","Math","floor","monthsLeft","daysLeft","prcntLived","toFixed","prcntLeft","message","Footer","href","target","countries","maleLength","femaleLength","App","state","country","sex","birthDate","birthTime","deathTime","lifeLength","dateLeft","remainigTime","livedTime","handleDateChange","e","_this","setState","Date","getTime","handleCountryChange","handleSexChange","handleSubmit","preventDefault","find","currentTime","getFullYear","getMonth","getDate","getDay","getHours","getMinutes","intervalId","clearInterval","setInterval","handleRefresh","window","location","reload","src_components_Header","src_components_Form","this","src_components_Panel","src_components_Footer","Component","Boolean","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9608b7a5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <span>memento</span>\r\n            <span>it's your time</span>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Form.css';\r\n\r\nconst Form = props => {\r\n    return (\r\n        <div className=\"formWrap\">\r\n            <form onSubmit={props.submit}>\r\n                <div className=\"row\">\r\n                    <input type=\"date\" onChange={props.changeDate} />\r\n                </div>\r\n                <div className=\"row selectWrap\">\r\n                    <select name=\"countries\" onChange={props.changeCountry}>\r\n                        <option value=\"\" selected disabled hidden>Choose your country</option>\r\n                        <option value=\"albania\">Albania</option>\r\n                        <option value=\"argentina\">Argentina</option>\r\n                        <option value=\"australia\">Australia</option>\r\n                        <option value=\"austria\">Austria</option>\r\n                        <option value=\"belgium\">Belgium</option>\r\n                        <option value=\"brunei\">Brunei</option>\r\n                        <option value=\"canada\">Canada</option>\r\n                        <option value=\"chile\">Chile</option>\r\n                        <option value=\"china\">China</option>\r\n                        <option value=\"costa rica\">Costa Rica</option>\r\n                        <option value=\"croatia\">Croatia</option>\r\n                        <option value=\"cuba\">Cuba</option>\r\n                        <option value=\"cyprus\">Cyprus</option>\r\n                        <option value=\"czech\">Czech Republic</option>\r\n                        <option value=\"denmark\">Denmark</option>\r\n                        <option value=\"estonia\">Estonia</option>\r\n                        <option value=\"finland\">Finland</option>\r\n                        <option value=\"france\">France</option>\r\n                        <option value=\"germany\">Germany</option>\r\n                        <option value=\"greece\">Greece</option>\r\n                        <option value=\"iceland\">Iceland</option>\r\n                        <option value=\"india\">India</option>\r\n                        <option value=\"ireland\">Ireland</option>\r\n                        <option value=\"israel\">Israel</option>\r\n                        <option value=\"italy\">Italy</option>\r\n                        <option value=\"japan\">Japan</option>\r\n                        <option value=\"luxembourgh\">Luxembourgh</option>\r\n                        <option value=\"malaysia\">Malaysia</option>\r\n                        <option value=\"maldives\">Maldives</option>\r\n                        <option value=\"malta\">Malta</option>\r\n                        <option value=\"mexico\">Mexico</option>\r\n                        <option value=\"netherlands\">Netherlands</option>\r\n                        <option value=\"new zealand\">New Zealand</option>\r\n                        <option value=\"norway\">Norway</option>\r\n                        <option value=\"panama\">Panama</option>\r\n                        <option value=\"poland\">Poland</option>\r\n                        <option value=\"portugal\">Portugal</option>\r\n                        <option value=\"qatar\">Qatar</option>\r\n                        <option value=\"russia\">Russia</option>\r\n                        <option value=\"singapore\">Singapore</option>\r\n                        <option value=\"slovenia\">Slovenia</option>\r\n                        <option value=\"south korea\">South Korea</option>\r\n                        <option value=\"spain\">Spain</option>\r\n                        <option value=\"sweden\">Sweden</option>\r\n                        <option value=\"switzerland\">Switzerland</option>\r\n                        <option value=\"turkey\">Turkey</option>\r\n                        <option value=\"uk\">United Kingdom</option>\r\n                        <option value=\"usa\">USA</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"radioWrap\">\r\n                        <label htmlFor=\"male\">\r\n                            <input type=\"radio\" id=\"male\" name=\"sex\" value=\"male\" onChange={props.changeSex} />\r\n                            Male\r\n                </label>\r\n                        <label htmlFor=\"female\">\r\n                            <input type=\"radio\" id=\"female\" name=\"sex\" value=\"female\" onChange={props.changeSex} />\r\n                            Female\r\n                </label>\r\n                    </div>\r\n                </div>\r\n\r\n                {props.isClicked ? <button type=\"button\" onClick={props.refresh}>Reset</button> : <button >Check</button>}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport './Panel.css';\r\n\r\nconst Panel = props => {\r\n    const { deathMonth, deathDate, deathYear, percentLived, percentLeft, deathDay, isClicked, deathHours, deathMinutes, remainingTime } = props.data;\r\n\r\n    let month = '';\r\n    switch (deathMonth) {\r\n        case 0: {\r\n            month = 'Jan';\r\n            break;\r\n        }\r\n        case 1: {\r\n            month = 'Feb';\r\n            break;\r\n        }\r\n        case 2: {\r\n            month = 'Mar';\r\n            break;\r\n        }\r\n        case 3: {\r\n            month = 'Apr';\r\n            break;\r\n        }\r\n        case 4: {\r\n            month = 'May';\r\n            break;\r\n        }\r\n        case 5: {\r\n            month = 'Jun';\r\n            break;\r\n        }\r\n        case 6: {\r\n            month = 'Jul';\r\n            break;\r\n        }\r\n        case 7: {\r\n            month = 'Aug';\r\n            break;\r\n        }\r\n        case 8: {\r\n            month = 'Sep';\r\n            break;\r\n        }\r\n        case 9: {\r\n            month = 'Oct';\r\n            break;\r\n        }\r\n        case 10: {\r\n            month = 'Nov';\r\n            break;\r\n        }\r\n        case 11: {\r\n            month = 'Dec';\r\n            break;\r\n        }\r\n        default: {\r\n            month = '';\r\n        }\r\n    }\r\n\r\n    let day = '';\r\n    switch (deathDay) {\r\n        case 0: {\r\n            day = 'Monday';\r\n            break;\r\n        }\r\n        case 1: {\r\n            day = 'Tuesday';\r\n            break;\r\n        }\r\n        case 2: {\r\n            day = 'Wednesday';\r\n            break;\r\n        }\r\n        case 3: {\r\n            day = 'Thursday';\r\n            break;\r\n        }\r\n        case 4: {\r\n            day = 'Friday';\r\n            break;\r\n        }\r\n        case 5: {\r\n            day = 'Saturday';\r\n            break;\r\n        }\r\n        case 6: {\r\n            day = 'Sunday';\r\n            break;\r\n        }\r\n        default: {\r\n            day = '';\r\n        }\r\n    }\r\n\r\n    const deathDateLastDigit = deathDate.toString().split('').pop();\r\n    let ending = '';\r\n    if (deathDateLastDigit == 1) {\r\n        ending = \"st\";\r\n    } else if (deathDateLastDigit == 2) {\r\n        ending = 'nd';\r\n    } else if (deathDateLastDigit == 3) {\r\n        ending = 'rd'\r\n    } else {\r\n        ending = 'th';\r\n    }\r\n\r\n    let timeLeft = remainingTime;\r\n\r\n    const yearsLeft = Math.floor(timeLeft / 31536000000);\r\n    const monthsLeft = Math.floor((timeLeft - yearsLeft * 31536000000) / 2592000000);\r\n    const daysLeft = Math.floor((timeLeft - (yearsLeft * 31536000000) - monthsLeft * 2592000000) / 86400000);\r\n\r\n    let prcntLived = percentLived.toFixed(7);\r\n    let prcntLeft = percentLeft.toFixed(7);\r\n\r\n    const message = (\r\n        <div className=\"panel\">\r\n            <p> Your predicted death date is:</p>\r\n            <p><span className=\"date\"><span className=\"newLine\">{month} {deathDate}{ending}, {deathYear} ({day}),</span> at {deathHours < 10 ? '0' : null}{deathHours}:{deathMinutes < 10 ? '0' : null}{deathMinutes}</span>.</p>\r\n            <p>You've already lived <span className=\"percent neg\">{prcntLived}%</span> of your life.</p>\r\n            <p>You have <span className=\"percent pos\">{prcntLeft}%</span> left,</p>\r\n            <p>or {yearsLeft} years, {monthsLeft} months, {daysLeft} day{daysLeft != 1 && 's'}.</p>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"panelWrap\">\r\n            {isClicked && message}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Panel;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <h3> composed by <a href=\"http://www.frontEpic.com\" target=\"_blank\">frontEpic</a></h3>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Form from './Form';\nimport Panel from './Panel';\nimport Footer from './Footer';\n\nconst countries = [\n  {\n    name: 'albania',\n    maleLength: 75.1,\n    femaleLength: 80.7\n  },\n  {\n    name: 'argentina',\n    maleLength: 72.7,\n    femaleLength: 79.9\n  },\n  {\n    name: 'australia',\n    maleLength: 80.9,\n    femaleLength: 84.8\n  },\n  {\n    name: 'austria',\n    maleLength: 79,\n    femaleLength: 83.9\n  },\n  {\n    name: 'belgium',\n    maleLength: 78.6,\n    femaleLength: 83.5\n  },\n  {\n    name: 'brunei',\n    maleLength: 76.3,\n    femaleLength: 79.2\n  },\n  {\n    name: 'canada',\n    maleLength: 80.2,\n    femaleLength: 84.1\n  },\n  {\n    name: 'chile',\n    maleLength: 77.4,\n    femaleLength: 83.4\n  },\n  {\n    name: 'china',\n    maleLength: 74.6,\n    femaleLength: 77.6\n  },\n  {\n    name: 'costa rica',\n    maleLength: 77.1,\n    femaleLength: 82.2\n  },\n  {\n    name: 'croatia',\n    maleLength: 74.7,\n    femaleLength: 81.2\n  },\n  {\n    name: 'cuba',\n    maleLength: 76.9,\n    femaleLength: 81.4\n  },\n  {\n    name: 'cyprus',\n    maleLength: 78.3,\n    femaleLength: 82.7\n  },\n  {\n    name: 'czech',\n    maleLength: 75.9,\n    femaleLength: 81.7\n  },\n  {\n    name: 'denmark',\n    maleLength: 78.6,\n    femaleLength: 82.5\n  },\n  {\n    name: 'estonia',\n    maleLength: 72.7,\n    femaleLength: 82.0\n  },\n  {\n    name: 'finland',\n    maleLength: 78.3,\n    femaleLength: 83.8\n  },\n  {\n    name: 'france',\n    maleLength: 79.4,\n    femaleLength: 85.4\n  },\n  {\n    name: 'germany',\n    maleLength: 78.7,\n    femaleLength: 83.4\n  },\n  {\n    name: 'greece',\n    maleLength: 78.3,\n    femaleLength: 83.6\n  },\n  {\n    name: 'iceland',\n    maleLength: 81.2,\n    femaleLength: 84.1\n  },\n  {\n    name: 'india',\n    maleLength: 66.9,\n    femaleLength: 69.9\n  },\n  {\n    name: 'ireland',\n    maleLength: 79.4,\n    femaleLength: 83.4\n  },\n  {\n    name: 'israel',\n    maleLength: 80.6,\n    femaleLength: 84.3\n  },\n  {\n    name: 'italy',\n    maleLength: 80.5,\n    femaleLength: 84.8\n  },\n  {\n    name: 'japan',\n    maleLength: 80.5,\n    femaleLength: 86.8\n  },\n  {\n    name: 'luxembourgh',\n    maleLength: 79.8,\n    femaleLength: 84.0\n  },\n  {\n    name: 'malaysia',\n    maleLength: 72.7,\n    femaleLength: 77.3\n  },\n  {\n    name: 'maldives',\n    maleLength: 76.9,\n    femaleLength: 80.2\n  },\n  {\n    name: 'malta',\n    maleLength: 79.7,\n    femaleLength: 83.7\n  },\n  {\n    name: 'mexico',\n    maleLength: 73.9,\n    femaleLength: 79.5\n  },\n  {\n    name: 'netherlands',\n    maleLength: 80.0,\n    femaleLength: 83.6\n  },\n  {\n    name: 'new zealand',\n    maleLength: 80,\n    femaleLength: 83.3\n  },\n  {\n    name: 'norway',\n    maleLength: 79.8,\n    femaleLength: 83.7\n  },\n  {\n    name: 'panama',\n    maleLength: 74.7,\n    femaleLength: 81.1\n  },\n  {\n    name: 'poland',\n    maleLength: 73.6,\n    femaleLength: 81.3\n  },\n  {\n    name: 'portugal',\n    maleLength: 78.2,\n    femaleLength: 83.9\n  },\n  {\n    name: 'qatar',\n    maleLength: 77.4,\n    femaleLength: 80.0\n  },\n  {\n    name: 'russia',\n    maleLength: 64.7,\n    femaleLength: 76.3\n  },\n  {\n    name: 'singapore',\n    maleLength: 80.0,\n    femaleLength: 86.1\n  },\n  {\n    name: 'slovenia',\n    maleLength: 77.9,\n    femaleLength: 83.7\n  },\n  {\n    name: 'south korea',\n    maleLength: 78.8,\n    femaleLength: 85.5\n  },\n  {\n    name: 'spain',\n    maleLength: 80.1,\n    femaleLength: 85.5\n  },\n  {\n    name: 'sweden',\n    maleLength: 80.7,\n    femaleLength: 84.0\n  },\n  {\n    name: 'switzerland',\n    maleLength: 81.3,\n    femaleLength: 85.3\n  },\n  {\n    name: 'turkey',\n    maleLength: 72.6,\n    femaleLength: 78.9\n  },\n  {\n    name: 'uk',\n    maleLength: 79.4,\n    femaleLength: 83\n  },\n  {\n    name: 'usa',\n    maleLength: 76.9,\n    femaleLength: 81.6\n  },\n];\n\nclass App extends Component {\n  state = {\n    value: '',\n    country: '',\n    sex: '',\n    birthDate: '',\n    birthTime: 0,\n    deathTime: 0,\n    deathYear: 0,\n    deathMonth: 0,\n    deathDate: 0,\n    deathDay: 0,\n    deathHours: 0,\n    deathMinutes: 0,\n    lifeLength: 0,\n    percentLived: 0,\n    percentLeft: 0,\n    dateLeft: '',\n    remainigTime: 0,\n    livedTime: 0,\n    isClicked: false\n  }\n\n  handleDateChange = e => {\n    const value = e.target.value;\n    this.setState({\n      birthDate: value,\n      birthTime: new Date(value).getTime()\n    });\n\n  }\n\n  handleCountryChange = e => {\n    this.setState({\n      country: e.target.value\n    });\n  }\n\n  handleSexChange = e => {\n    this.setState({\n      sex: e.target.value\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const country = countries.find(country => country.name === this.state.country);\n    const birthTime = this.state.birthTime;\n    let currentTime = new Date().getTime();\n    let lifeLength = 0;\n    if (this.state.sex === 'male') {\n      lifeLength = country.maleLength * 31557600000;\n    }\n    else if (this.state.sex === 'female') {\n      lifeLength = country.femaleLength * 31557600000;\n    }\n    const deathTimeObject = birthTime + lifeLength;\n    const deathTime = new Date(deathTimeObject);\n    const deathYear = deathTime.getFullYear();\n    const deathMonth = deathTime.getMonth();\n    const deathDate = deathTime.getDate();\n    const deathDay = deathTime.getDay();\n    const deathHours = deathTime.getHours();\n    const deathMinutes = deathTime.getMinutes();\n    let percentLived = ((currentTime - birthTime) * 100) / (deathTime - birthTime);\n    let percentLeft = 100 - percentLived;\n    const remainingTime = deathTime - new Date().getTime();\n    const livedTime = lifeLength - remainingTime;\n\n    this.setState({\n      lifeLength,\n      deathTime,\n      deathYear,\n      deathMonth,\n      deathDate,\n      deathDay,\n      deathHours,\n      deathMinutes,\n      percentLived,\n      percentLeft,\n      remainingTime,\n      livedTime,\n      isClicked: true\n    });\n\n    let intervalId = null;\n    clearInterval(intervalId);\n    intervalId = setInterval(() => {\n      percentLived = ((currentTime - birthTime) * 100) / (deathTime - birthTime);\n      percentLeft = 100 - percentLived;\n      currentTime += 1000;\n      this.setState({\n        remainingTime: this.state.remainingTime - 1000,\n        livedTime: this.state.remainingTime + 1000,\n        percentLived,\n        percentLeft\n      });\n    }, 200);\n  }\n\n  handleRefresh = () => {\n    window.location.reload(false);\n  }\n\n  render() {\n    return (\n      <div className=\"mainWrap\">\n        <Header />\n        <Form\n          value={this.state.value}\n          changeCountry={this.handleCountryChange}\n          changeDate={this.handleDateChange}\n          changeSex={this.handleSexChange}\n          submit={this.handleSubmit}\n          refresh={this.handleRefresh}\n          isClicked={this.state.isClicked}\n        />\n        <Panel data={this.state} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}